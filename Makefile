# This Makefile requires the following commands to be available:
# * python3.12
# * docker
# * poetry (installation guide: https://python-poetry.org/docs/#installing-with-the-official-installer)

# for local development and testing
export GUNICORN_CONF=python:grasp_api.gunicorn_conf
GRAPS_API_ENVFILES_SECRETS?=$(CURDIR)/api.env
export GRAPS_API_ENVFILES_SECRETS

## Test reports
UNITTESTS_REPORT_DIR=.

## Poetry
.PHONY: install
install: REVISION
	poetry install

.PHONY: update
update:
	poetry update --no-ansi

# Updates the lock file
.PHONY: lock
lock:
	poetry lock --check

clean:
	rm -rf .venv
	find . -name '*.py[cod]' -delete
	rm -rf *.egg-info build dist
	rm -rf coverage.xml .coverage junit.xml

REVISION:
	echo "$$(git branch | grep '*' | cut -d ' ' -f 2) $$(git describe --tags --always)" > REVISION


## Quality assurance
# lint/black should run before lint/flake8 because it shows diff for the files to be changed

.PHONY: lint
lint:
	poetry run isort --diff --check src tests
	poetry run black --diff --check src tests
	poetry run flake8 src tests
	poetry run mypy src tests

.PHONY: checks
checks:
	poetry check

.PHONY: format
format:
	poetry run isort src tests
	poetry run black --verbose src tests

.PHONY: unittests
unittests:
	GRAPS_API_ENVFILES_SECRETS="" \
	poetry run coverage run -m pytest -sv tests --junitxml=$(UNITTESTS_REPORT_DIR)/junit.xml
	poetry run coverage xml -i -o $(UNITTESTS_REPORT_DIR)/coverage.xml

## Local Development
.PHONY: test
test: lint checks unittests


## Run the app
.PHONY: run/webserver
run/webserver:
	poetry run gunicorn -k uvicorn.workers.UvicornWorker -c python:grasp_api.gunicorn_conf grasp_api.api.app:uvicorn_entry

.PHONY: run/devserver
run/devserver:
	poetry run uvicorn grasp_api.api.app:uvicorn_entry --factory --reload-include 'src/**/*.py' --reload --host=0.0.0.0 --port=8000 --log-level debug


.PHONY: makemigrations
makemigrations: desc?=autogenerated
makemigrations:
	@echo "Generate migration scripts"
	poetry run alembic revision --autogenerate -m $(desc)
	@echo 'Done!'

.PHONY: migrate
migrate:
	@echo 'Execute migration scripts on database'
	poetry run alembic upgrade head
	@echo 'Done!'

.PHONY: run/dockerized
run/dockerized:
	docker-compose up

